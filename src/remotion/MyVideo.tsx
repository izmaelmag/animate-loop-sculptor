import React, { useState, useEffect } from "react";
import { P5Animation } from "./P5Animation";
import { useCurrentFrame, useVideoConfig, delayRender, continueRender, staticFile } from "remotion";
import { AnimationName } from "../animations";
import { animationSettings, defaultAnimation } from "../animations";

interface MyVideoProps {
  templateId?: AnimationName;
}

// Define the font family name
const FONT_FAMILY_NAME = 'Cascadia Code'; 
// Generate the URL using staticFile
const FONT_URL = staticFile('/CascadiaCode.ttf'); // Use staticFile for the path

export const MyVideo: React.FC<MyVideoProps> = ({ 
  templateId = defaultAnimation.id, 
}) => {
  const frame = useCurrentFrame();
  const { durationInFrames } = useVideoConfig();
  const [handle] = useState(() => delayRender());
  const [fontLoaded, setFontLoaded] = useState(false);

  useEffect(() => {
    const loadCustomFont = async () => {
      try {
        console.log(`Attempting to load font '${FONT_FAMILY_NAME}' from ${FONT_URL} via FontFace API...`);
        // Pass the URL generated by staticFile to FontFace
        const fontFace = new FontFace(FONT_FAMILY_NAME, `url(${FONT_URL})`); 
        await fontFace.load(); 
        document.fonts.add(fontFace); 
        setFontLoaded(true);
        console.log(`Font '${FONT_FAMILY_NAME}' loaded and added via FontFace API.`);
        continueRender(handle);
      } catch (err) {
        console.error(`Error loading font '${FONT_FAMILY_NAME}' via FontFace API:`, err);
        // Decide how to handle error - continue without font?
        continueRender(handle); 
      }
    };
    loadCustomFont();
  }, [handle]);

  if (!fontLoaded) {
    console.log(`Waiting for font '${FONT_FAMILY_NAME}' to load via FontFace API...`);
    return null; // Remotion waits here
  }

  // Get the current animation settings with fallback to default
  const currentSettings = animationSettings[templateId] || defaultAnimation;

  if (!currentSettings) {
    console.error(`Animation not found: ${templateId}, using default`);
  }

  return (
    <div
      style={{
        flex: 1,
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        backgroundColor: "black", 
        width: "100%",
        height: "100%",
      }}
    >
      <P5Animation templateId={templateId} /> 
    </div>
  );
};
